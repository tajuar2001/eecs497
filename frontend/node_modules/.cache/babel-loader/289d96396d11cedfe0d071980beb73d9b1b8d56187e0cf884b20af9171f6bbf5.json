{"ast":null,"code":"var _jsxFileName = \"/home/tajuarb/Coding/newLeaf/frontend/src/components/communityPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './css/communityPage.css';\nimport CommunityDetails from './CommunityDetails';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction CommunityPage() {\n  _s();\n  const [communities, setCommunities] = useState([]);\n  const [userCommunities, setUserCommunities] = useState([]);\n  const [selectedCommunity, setSelectedCommunity] = useState(null);\n  const [newCommunityName, setNewCommunityName] = useState('');\n  const [newCommunityDescription, setNewCommunityDescription] = useState('');\n  useEffect(() => {\n    fetchCommunities();\n    fetchUserCommunities();\n  }, []);\n  const fetchCommunities = async () => {\n    try {\n      const response = await fetch('/api/communities');\n      const data = await response.json();\n      setCommunities(data);\n    } catch (error) {\n      console.error('Error fetching communities:', error);\n    }\n  };\n  const fetchUserCommunities = async () => {\n    try {\n      const response = await fetch('/api/user/communities');\n      const data = await response.json();\n      setUserCommunities(data);\n    } catch (error) {\n      console.error('Error fetching user communities:', error);\n    }\n  };\n  const handleCommunityClick = community => {\n    setSelectedCommunity(community);\n  };\n  const handleJoinCommunity = async communityId => {\n    try {\n      await fetch(`/api/communities/${communityId}/join`, {\n        method: 'POST'\n      });\n      fetchUserCommunities();\n    } catch (error) {\n      console.error('Error joining community:', error);\n    }\n  };\n  const handleLeaveCommunity = async communityId => {\n    try {\n      await fetch(`/api/communities/${communityId}/leave`, {\n        method: 'POST'\n      });\n      fetchUserCommunities();\n    } catch (error) {\n      console.error('Error leaving community:', error);\n    }\n  };\n  const handleCreateCommunity = async () => {\n    try {\n      const response = await fetch('/api/communities', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          name: newCommunityName,\n          description: newCommunityDescription\n        })\n      });\n      const data = await response.json();\n      setNewCommunityName('');\n      setNewCommunityDescription('');\n      fetchCommunities();\n    } catch (error) {\n      console.error('Error creating community:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"community-page\",\n    children: selectedCommunity ? /*#__PURE__*/_jsxDEV(CommunityDetails, {\n      community: selectedCommunity,\n      onBack: () => setSelectedCommunity(null)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"community-sidebar\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Communities\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: communities.map(community => /*#__PURE__*/_jsxDEV(\"li\", {\n            onClick: () => handleCommunityClick(community),\n            children: [community.name, userCommunities.some(c => c.id === community.id) ? /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleLeaveCommunity(community.id),\n              children: \"Leave\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 21\n            }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleJoinCommunity(community.id),\n              children: \"Join\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 21\n            }, this)]\n          }, community.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"create-community\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Create Community\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Community Name\",\n            value: newCommunityName,\n            onChange: e => setNewCommunityName(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            placeholder: \"Community Description\",\n            value: newCommunityDescription,\n            onChange: e => setNewCommunityDescription(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleCreateCommunity,\n            children: \"Create\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"community-content\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"user-communities\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"My Communities\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: userCommunities.map(community => /*#__PURE__*/_jsxDEV(\"li\", {\n              onClick: () => handleCommunityClick(community),\n              children: community.name\n            }, community.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n}\n_s(CommunityPage, \"Y6Bn/bzWWitz6b3fWD7Y1JjnLIA=\");\n_c = CommunityPage;\nexport default CommunityPage;\nvar _c;\n$RefreshReg$(_c, \"CommunityPage\");","map":{"version":3,"names":["React","useState","useEffect","CommunityDetails","jsxDEV","_jsxDEV","Fragment","_Fragment","CommunityPage","_s","communities","setCommunities","userCommunities","setUserCommunities","selectedCommunity","setSelectedCommunity","newCommunityName","setNewCommunityName","newCommunityDescription","setNewCommunityDescription","fetchCommunities","fetchUserCommunities","response","fetch","data","json","error","console","handleCommunityClick","community","handleJoinCommunity","communityId","method","handleLeaveCommunity","handleCreateCommunity","headers","body","JSON","stringify","name","description","className","children","onBack","fileName","_jsxFileName","lineNumber","columnNumber","map","onClick","some","c","id","type","placeholder","value","onChange","e","target","_c","$RefreshReg$"],"sources":["/home/tajuarb/Coding/newLeaf/frontend/src/components/communityPage.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './css/communityPage.css';\nimport CommunityDetails from './CommunityDetails';\n\nfunction CommunityPage() {\n  const [communities, setCommunities] = useState([]);\n  const [userCommunities, setUserCommunities] = useState([]);\n  const [selectedCommunity, setSelectedCommunity] = useState(null);\n  const [newCommunityName, setNewCommunityName] = useState('');\n  const [newCommunityDescription, setNewCommunityDescription] = useState('');\n\n  useEffect(() => {\n    fetchCommunities();\n    fetchUserCommunities();\n  }, []);\n\n  const fetchCommunities = async () => {\n    try {\n      const response = await fetch('/api/communities');\n      const data = await response.json();\n      setCommunities(data);\n    } catch (error) {\n      console.error('Error fetching communities:', error);\n    }\n  };\n\n  const fetchUserCommunities = async () => {\n    try {\n      const response = await fetch('/api/user/communities');\n      const data = await response.json();\n      setUserCommunities(data);\n    } catch (error) {\n      console.error('Error fetching user communities:', error);\n    }\n  };\n\n  const handleCommunityClick = (community) => {\n    setSelectedCommunity(community);\n  };\n\n  const handleJoinCommunity = async (communityId) => {\n    try {\n      await fetch(`/api/communities/${communityId}/join`, { method: 'POST' });\n      fetchUserCommunities();\n    } catch (error) {\n      console.error('Error joining community:', error);\n    }\n  };\n\n  const handleLeaveCommunity = async (communityId) => {\n    try {\n      await fetch(`/api/communities/${communityId}/leave`, { method: 'POST' });\n      fetchUserCommunities();\n    } catch (error) {\n      console.error('Error leaving community:', error);\n    }\n  };\n\n  const handleCreateCommunity = async () => {\n    try {\n      const response = await fetch('/api/communities', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ name: newCommunityName, description: newCommunityDescription }),\n      });\n      const data = await response.json();\n      setNewCommunityName('');\n      setNewCommunityDescription('');\n      fetchCommunities();\n    } catch (error) {\n      console.error('Error creating community:', error);\n    }\n  };\n\n  return (\n    <div className=\"community-page\">\n      {selectedCommunity ? (\n        <CommunityDetails community={selectedCommunity} onBack={() => setSelectedCommunity(null)} />\n      ) : (\n        <>\n          <div className=\"community-sidebar\">\n            <h2>Communities</h2>\n            <ul>\n              {communities.map((community) => (\n                <li key={community.id} onClick={() => handleCommunityClick(community)}>\n                  {community.name}\n                  {userCommunities.some((c) => c.id === community.id) ? (\n                    <button onClick={() => handleLeaveCommunity(community.id)}>Leave</button>\n                  ) : (\n                    <button onClick={() => handleJoinCommunity(community.id)}>Join</button>\n                  )}\n                </li>\n              ))}\n            </ul>\n            <div className=\"create-community\">\n              <h3>Create Community</h3>\n              <input\n                type=\"text\"\n                placeholder=\"Community Name\"\n                value={newCommunityName}\n                onChange={(e) => setNewCommunityName(e.target.value)}\n              />\n              <textarea\n                placeholder=\"Community Description\"\n                value={newCommunityDescription}\n                onChange={(e) => setNewCommunityDescription(e.target.value)}\n              ></textarea>\n              <button onClick={handleCreateCommunity}>Create</button>\n            </div>\n          </div>\n          <div className=\"community-content\">\n            <div className=\"user-communities\">\n              <h3>My Communities</h3>\n              <ul>\n                {userCommunities.map((community) => (\n                  <li key={community.id} onClick={() => handleCommunityClick(community)}>\n                    {community.name}\n                  </li>\n                ))}\n              </ul>\n            </div>\n          </div>\n        </>\n      )}\n    </div>\n  );\n}\n\nexport default CommunityPage;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}