{"ast":null,"code":"var _jsxFileName = \"/home/tajuarb/Coding/newLeaf/frontend/src/components/resources/components/ParksPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport './css/parksPage.css';\nimport { GOOGLE_MAPS_API_KEY } from './mapsAPI';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ParksPage({\n  onBackClick\n}) {\n  _s();\n  const mapRef = useRef(null);\n  useEffect(() => {\n    const initializeMap = userLocation => {\n      const mapOptions = {\n        center: userLocation,\n        zoom: 14 // Default zoom level\n      };\n      const map = new window.google.maps.Map(mapRef.current, mapOptions);\n\n      // Search for nearby parks\n      const request = {\n        location: userLocation,\n        radius: 5000,\n        // Search radius in meters\n        type: 'park'\n      };\n      const service = new window.google.maps.places.PlacesService(map);\n      service.nearbySearch(request, (results, status) => {\n        if (status === window.google.maps.places.PlacesServiceStatus.OK) {\n          results.forEach(place => {\n            const marker = new window.google.maps.Marker({\n              position: place.geometry.location,\n              map: map,\n              title: place.name\n            });\n            marker.addListener('click', () => {\n              window.open(`https://www.google.com/maps/search/?api=1&query=${place.geometry.location.lat()},${place.geometry.location.lng()}`, '_blank');\n            });\n          });\n        }\n      });\n    };\n    const getUserLocation = () => {\n      if (navigator.geolocation) {\n        navigator.geolocation.getCurrentPosition(position => {\n          const userLocation = {\n            lat: position.coords.latitude,\n            lng: position.coords.longitude\n          };\n          initializeMap(userLocation);\n        }, error => {\n          console.error('Error getting user location:', error);\n          // Fallback to default location if user location is not available\n          const defaultLocation = {\n            lat: 37.7749,\n            lng: -122.4194\n          }; // Default coordinates (e.g., San Francisco)\n          initializeMap(defaultLocation);\n        });\n      } else {\n        console.error('Geolocation is not supported by this browser.');\n        // Fallback to default location if geolocation is not supported\n        const defaultLocation = {\n          lat: 37.7749,\n          lng: -122.4194\n        }; // Default coordinates (e.g., San Francisco)\n        initializeMap(defaultLocation);\n      }\n    };\n    if (window.google && window.google.maps) {\n      getUserLocation();\n    } else {\n      const script = document.createElement('script');\n      script.src = `https://maps.googleapis.com/maps/api/js?key=${GOOGLE_MAPS_API_KEY}&libraries=places`;\n      script.onload = getUserLocation;\n      document.head.appendChild(script);\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"parks-page-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Parks Guide\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: mapRef,\n      className: \"map-container\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"back-button\",\n      onClick: onBackClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n}\n_s(ParksPage, \"9mn7MMe4fPaZ50ApsOpRWF2HbFg=\");\n_c = ParksPage;\nexport default ParksPage;\nvar _c;\n$RefreshReg$(_c, \"ParksPage\");","map":{"version":3,"names":["React","useEffect","useRef","GOOGLE_MAPS_API_KEY","jsxDEV","_jsxDEV","ParksPage","onBackClick","_s","mapRef","initializeMap","userLocation","mapOptions","center","zoom","map","window","google","maps","Map","current","request","location","radius","type","service","places","PlacesService","nearbySearch","results","status","PlacesServiceStatus","OK","forEach","place","marker","Marker","position","geometry","title","name","addListener","open","lat","lng","getUserLocation","navigator","geolocation","getCurrentPosition","coords","latitude","longitude","error","console","defaultLocation","script","document","createElement","src","onload","head","appendChild","className","children","fileName","_jsxFileName","lineNumber","columnNumber","ref","onClick","_c","$RefreshReg$"],"sources":["/home/tajuarb/Coding/newLeaf/frontend/src/components/resources/components/ParksPage.jsx"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport './css/parksPage.css';\nimport { GOOGLE_MAPS_API_KEY } from './mapsAPI';\n\nfunction ParksPage({ onBackClick }) {\n  const mapRef = useRef(null);\n\n  useEffect(() => {\n    const initializeMap = (userLocation) => {\n      const mapOptions = {\n        center: userLocation,\n        zoom: 14, // Default zoom level\n      };\n\n      const map = new window.google.maps.Map(mapRef.current, mapOptions);\n\n      // Search for nearby parks\n      const request = {\n        location: userLocation,\n        radius: 5000, // Search radius in meters\n        type: 'park',\n      };\n\n      const service = new window.google.maps.places.PlacesService(map);\n      service.nearbySearch(request, (results, status) => {\n        if (status === window.google.maps.places.PlacesServiceStatus.OK) {\n          results.forEach((place) => {\n            const marker = new window.google.maps.Marker({\n              position: place.geometry.location,\n              map: map,\n              title: place.name,\n            });\n\n            marker.addListener('click', () => {\n              window.open(`https://www.google.com/maps/search/?api=1&query=${place.geometry.location.lat()},${place.geometry.location.lng()}`, '_blank');\n            });\n          });\n        }\n      });\n    };\n\n    const getUserLocation = () => {\n      if (navigator.geolocation) {\n        navigator.geolocation.getCurrentPosition(\n          (position) => {\n            const userLocation = {\n              lat: position.coords.latitude,\n              lng: position.coords.longitude,\n            };\n            initializeMap(userLocation);\n          },\n          (error) => {\n            console.error('Error getting user location:', error);\n            // Fallback to default location if user location is not available\n            const defaultLocation = { lat: 37.7749, lng: -122.4194 }; // Default coordinates (e.g., San Francisco)\n            initializeMap(defaultLocation);\n          }\n        );\n      } else {\n        console.error('Geolocation is not supported by this browser.');\n        // Fallback to default location if geolocation is not supported\n        const defaultLocation = { lat: 37.7749, lng: -122.4194 }; // Default coordinates (e.g., San Francisco)\n        initializeMap(defaultLocation);\n      }\n    };\n\n    if (window.google && window.google.maps) {\n      getUserLocation();\n    } else {\n      const script = document.createElement('script');\n      script.src = `https://maps.googleapis.com/maps/api/js?key=${GOOGLE_MAPS_API_KEY}&libraries=places`;\n      script.onload = getUserLocation;\n      document.head.appendChild(script);\n    }\n  }, []);\n\n  return (\n    <div className=\"parks-page-container\">\n      <h2>Parks Guide</h2>\n      <div ref={mapRef} className=\"map-container\"></div>\n      <button className=\"back-button\" onClick={onBackClick}></button>\n    </div>\n  );\n}\n\nexport default ParksPage;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}