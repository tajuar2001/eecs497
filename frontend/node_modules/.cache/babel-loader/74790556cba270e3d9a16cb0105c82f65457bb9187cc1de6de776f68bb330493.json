{"ast":null,"code":"var _jsxFileName = \"/home/tajuarb/Coding/newLeaf/frontend/src/components/CommunityDetails.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CommunityDetails({\n  community,\n  onBack\n}) {\n  _s();\n  const [communityPosts, setCommunityPosts] = useState([]);\n  const [newPostTitle, setNewPostTitle] = useState('');\n  const [newPostContent, setNewPostContent] = useState('');\n  const [replyContent, setReplyContent] = useState('');\n  const [selectedPostId, setSelectedPostId] = useState(null);\n  useEffect(() => {\n    fetchCommunityPosts();\n  }, [community]);\n  const fetchCommunityPosts = async () => {\n    try {\n      const response = await fetch(`/api/communities/${community.id}/posts`);\n      const data = await response.json();\n      setCommunityPosts(data);\n    } catch (error) {\n      console.error('Error fetching community posts:', error);\n    }\n  };\n  const handleCreatePost = async () => {\n    try {\n      const response = await fetch(`/api/communities/${community.id}/posts`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          title: newPostTitle,\n          content: newPostContent\n        })\n      });\n      const data = await response.json();\n      setNewPostTitle('');\n      setNewPostContent('');\n      fetchCommunityPosts();\n    } catch (error) {\n      console.error('Error creating post:', error);\n    }\n  };\n  const handleReplyToPost = async postId => {\n    try {\n      await fetch(`/api/communities/${community.id}/posts/${postId}/replies`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          content: replyContent\n        })\n      });\n      setReplyContent('');\n      setSelectedPostId(null);\n      fetchCommunityPosts();\n    } catch (error) {\n      console.error('Error replying to post:', error);\n    }\n  };\n  const handleDeletePost = async postId => {\n    try {\n      await fetch(`/api/communities/${community.id}/posts/${postId}`, {\n        method: 'DELETE'\n      });\n      fetchCommunityPosts();\n    } catch (error) {\n      console.error('Error deleting post:', error);\n    }\n  };\n  const handleDeleteReply = async (postId, replyId) => {\n    try {\n      await fetch(`/api/communities/${community.id}/posts/${postId}/replies/${replyId}`, {\n        method: 'DELETE'\n      });\n      fetchCommunityPosts();\n    } catch (error) {\n      console.error('Error deleting reply:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"community-details\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: onBack,\n      children: \"Back\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: community.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"create-post\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Create Post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Title\",\n        value: newPostTitle,\n        onChange: e => setNewPostTitle(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        placeholder: \"Content\",\n        value: newPostContent,\n        onChange: e => setNewPostContent(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleCreatePost,\n        children: \"Create\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"community-posts\",\n      children: communityPosts.map(post => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"post\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: post.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"post-author\",\n            children: post.author\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 15\n          }, this), \": \", post.content]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 13\n        }, this), post.user_id === post.author && /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleDeletePost(post.id),\n          children: \"Delete Post\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setSelectedPostId(post.id),\n          children: \"Reply\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 13\n        }, this), selectedPostId === post.id && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"reply-input\",\n          children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n            placeholder: \"Write your reply...\",\n            value: replyContent,\n            onChange: e => setReplyContent(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleReplyToPost(post.id),\n            children: \"Submit Reply\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"post-replies\",\n          children: post.replies && post.replies.map(reply => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"reply\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"reply-author\",\n                children: reply.author\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 123,\n                columnNumber: 23\n              }, this), \": \", reply.content]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 21\n            }, this), reply.user_id === userId && /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleDeleteReply(post.id, reply.id),\n              children: \"Delete Reply\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 25\n            }, this)]\n          }, reply.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 13\n        }, this)]\n      }, post.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n}\n_s(CommunityDetails, \"JwentWJlKZ/0onruPp0+Qudrl2k=\");\n_c = CommunityDetails;\nexport default CommunityDetails;\nvar _c;\n$RefreshReg$(_c, \"CommunityDetails\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","CommunityDetails","community","onBack","_s","communityPosts","setCommunityPosts","newPostTitle","setNewPostTitle","newPostContent","setNewPostContent","replyContent","setReplyContent","selectedPostId","setSelectedPostId","fetchCommunityPosts","response","fetch","id","data","json","error","console","handleCreatePost","method","headers","body","JSON","stringify","title","content","handleReplyToPost","postId","handleDeletePost","handleDeleteReply","replyId","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","name","type","placeholder","value","onChange","e","target","map","post","author","user_id","replies","reply","userId","_c","$RefreshReg$"],"sources":["/home/tajuarb/Coding/newLeaf/frontend/src/components/CommunityDetails.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nfunction CommunityDetails({ community, onBack }) {\n  const [communityPosts, setCommunityPosts] = useState([]);\n  const [newPostTitle, setNewPostTitle] = useState('');\n  const [newPostContent, setNewPostContent] = useState('');\n  const [replyContent, setReplyContent] = useState('');\n  const [selectedPostId, setSelectedPostId] = useState(null);\n\n  useEffect(() => {\n    fetchCommunityPosts();\n  }, [community]);\n\n  const fetchCommunityPosts = async () => {\n    try {\n      const response = await fetch(`/api/communities/${community.id}/posts`);\n      const data = await response.json();\n      setCommunityPosts(data);\n    } catch (error) {\n      console.error('Error fetching community posts:', error);\n    }\n  };\n\n  const handleCreatePost = async () => {\n    try {\n      const response = await fetch(`/api/communities/${community.id}/posts`, {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ title: newPostTitle, content: newPostContent }),\n      });\n      const data = await response.json();\n      setNewPostTitle('');\n      setNewPostContent('');\n      fetchCommunityPosts();\n    } catch (error) {\n      console.error('Error creating post:', error);\n    }\n  };\n\n  const handleReplyToPost = async (postId) => {\n    try {\n      await fetch(`/api/communities/${community.id}/posts/${postId}/replies`, {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ content: replyContent }),\n      });\n      setReplyContent('');\n      setSelectedPostId(null);\n      fetchCommunityPosts();\n    } catch (error) {\n      console.error('Error replying to post:', error);\n    }\n  };\n\n  const handleDeletePost = async (postId) => {\n    try {\n      await fetch(`/api/communities/${community.id}/posts/${postId}`, {\n        method: 'DELETE',\n      });\n      fetchCommunityPosts();\n    } catch (error) {\n      console.error('Error deleting post:', error);\n    }\n  };\n\n  const handleDeleteReply = async (postId, replyId) => {\n    try {\n      await fetch(`/api/communities/${community.id}/posts/${postId}/replies/${replyId}`, {\n        method: 'DELETE',\n      });\n      fetchCommunityPosts();\n    } catch (error) {\n      console.error('Error deleting reply:', error);\n    }\n  };\n\n\n  return (\n    <div className=\"community-details\">\n      <button onClick={onBack}>Back</button>\n      <h2>{community.name}</h2>\n      <div className=\"create-post\">\n        <h3>Create Post</h3>\n        <input\n          type=\"text\"\n          placeholder=\"Title\"\n          value={newPostTitle}\n          onChange={(e) => setNewPostTitle(e.target.value)}\n        />\n        <textarea\n          placeholder=\"Content\"\n          value={newPostContent}\n          onChange={(e) => setNewPostContent(e.target.value)}\n        ></textarea>\n        <button onClick={handleCreatePost}>Create</button>\n      </div>\n      <div className=\"community-posts\">\n        {communityPosts.map((post) => (\n          <div key={post.id} className=\"post\">\n            <h4>{post.title}</h4>\n            <p>\n              <span className=\"post-author\">{post.author}</span>: {post.content}\n            </p>\n            {post.user_id === post.author && (\n          <button onClick={() => handleDeletePost(post.id)}>Delete Post</button>\n        )}\n            <button onClick={() => setSelectedPostId(post.id)}>Reply</button>\n            {selectedPostId === post.id && (\n              <div className=\"reply-input\">\n                <textarea\n                  placeholder=\"Write your reply...\"\n                  value={replyContent}\n                  onChange={(e) => setReplyContent(e.target.value)}\n                ></textarea>\n                <button onClick={() => handleReplyToPost(post.id)}>Submit Reply</button>\n              </div>\n            )}\n            <div className=\"post-replies\">\n              {post.replies &&\n                post.replies.map((reply) => (\n                  <div key={reply.id} className=\"reply\">\n                    <p>\n                      <span className=\"reply-author\">{reply.author}</span>: {reply.content}\n                    </p>\n                      {reply.user_id === userId && (\n                        <button onClick={() => handleDeleteReply(post.id, reply.id)}>Delete Reply</button>\n                    )}\n                  </div>\n                ))}\n            </div>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default CommunityDetails;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}