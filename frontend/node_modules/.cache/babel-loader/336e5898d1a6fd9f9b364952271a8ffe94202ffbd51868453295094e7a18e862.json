{"ast":null,"code":"var _jsxFileName = \"/home/tajuarb/Coding/newLeaf/frontend/src/components/resources/components/MapComponent.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport { GOOGLE_MAPS_API_KEY } from './mapsAPI';\nimport './css/parksPage.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MapComponent({\n  query\n}) {\n  _s();\n  const [userLocation, setUserLocation] = useState(null);\n  const mapIframeRef = useRef(null);\n  useEffect(() => {\n    const getUserLocation = () => {\n      if (navigator.geolocation) {\n        navigator.geolocation.getCurrentPosition(position => {\n          const location = {\n            lat: position.coords.latitude,\n            lng: position.coords.longitude\n          };\n          setUserLocation(location);\n        }, error => {\n          console.error('Error getting user location:', error);\n          setUserLocation({\n            lat: 37.7749,\n            lng: -122.4194\n          }); // Default coordinates (e.g., San Francisco)\n        });\n      } else {\n        console.error('Geolocation is not supported by this browser.');\n        setUserLocation({\n          lat: 37.7749,\n          lng: -122.4194\n        }); // Default coordinates (e.g., San Francisco)\n      }\n    };\n    getUserLocation();\n  }, []);\n  useEffect(() => {\n    // Reload the map iframe periodically\n    const intervalId = setInterval(() => {\n      if (mapIframeRef.current) {\n        mapIframeRef.current.src = mapIframeRef.current.src;\n      }\n    }, 60000); // Refresh every 1 minute\n\n    return () => clearInterval(intervalId); // Clear the interval on component unmount\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"parks-page-container\",\n    children: userLocation && /*#__PURE__*/_jsxDEV(\"iframe\", {\n      ref: mapIframeRef,\n      title: \"Google Map\",\n      className: \"map-container\",\n      width: \"600\",\n      height: \"450\",\n      loading: \"lazy\",\n      allowFullScreen: true,\n      src: `https://www.google.com/maps/embed/v1/search?key=${GOOGLE_MAPS_API_KEY}&near=${userLocation.lat},${userLocation.lng}&zoom=14&q=${query}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}\n_s(MapComponent, \"AOXAS5+8eXJIvzy3TX0i37aqMcE=\");\n_c = MapComponent;\nexport default MapComponent;\nvar _c;\n$RefreshReg$(_c, \"MapComponent\");","map":{"version":3,"names":["React","useEffect","useRef","useState","GOOGLE_MAPS_API_KEY","jsxDEV","_jsxDEV","MapComponent","query","_s","userLocation","setUserLocation","mapIframeRef","getUserLocation","navigator","geolocation","getCurrentPosition","position","location","lat","coords","latitude","lng","longitude","error","console","intervalId","setInterval","current","src","clearInterval","className","children","ref","title","width","height","loading","allowFullScreen","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/tajuarb/Coding/newLeaf/frontend/src/components/resources/components/MapComponent.jsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\nimport { GOOGLE_MAPS_API_KEY } from './mapsAPI';\nimport './css/parksPage.css';\n\nfunction MapComponent({ query }) {\n  const [userLocation, setUserLocation] = useState(null);\n  const mapIframeRef = useRef(null);\n\n  useEffect(() => {\n    const getUserLocation = () => {\n      if (navigator.geolocation) {\n        navigator.geolocation.getCurrentPosition(\n          (position) => {\n            const location = {\n              lat: position.coords.latitude,\n              lng: position.coords.longitude,\n            };\n            setUserLocation(location);\n          },\n          (error) => {\n            console.error('Error getting user location:', error);\n            setUserLocation({ lat: 37.7749, lng: -122.4194 }); // Default coordinates (e.g., San Francisco)\n          }\n        );\n      } else {\n        console.error('Geolocation is not supported by this browser.');\n        setUserLocation({ lat: 37.7749, lng: -122.4194 }); // Default coordinates (e.g., San Francisco)\n      }\n    };\n\n    getUserLocation();\n  }, []);\n\n  useEffect(() => {\n    // Reload the map iframe periodically\n    const intervalId = setInterval(() => {\n      if (mapIframeRef.current) {\n        mapIframeRef.current.src = mapIframeRef.current.src;\n      }\n    }, 60000); // Refresh every 1 minute\n\n    return () => clearInterval(intervalId); // Clear the interval on component unmount\n  }, []);\n\n  return (\n    <div className=\"parks-page-container\">\n      {/* Embed Google Map with user's location-centered map and search for parks */}\n      {userLocation && (\n        <iframe\n          ref={mapIframeRef}\n          title=\"Google Map\"\n          className=\"map-container\"\n          width=\"600\"\n          height=\"450\"\n          loading=\"lazy\"\n          allowFullScreen\n          src={`https://www.google.com/maps/embed/v1/search?key=${GOOGLE_MAPS_API_KEY}&near=${userLocation.lat},${userLocation.lng}&zoom=14&q=${query}`}\n        ></iframe>\n      )}\n    </div>\n  );\n}\n\nexport default MapComponent;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AAC1D,SAASC,mBAAmB,QAAQ,WAAW;AAC/C,OAAO,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7B,SAASC,YAAYA,CAAC;EAAEC;AAAM,CAAC,EAAE;EAAAC,EAAA;EAC/B,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EACtD,MAAMS,YAAY,GAAGV,MAAM,CAAC,IAAI,CAAC;EAEjCD,SAAS,CAAC,MAAM;IACd,MAAMY,eAAe,GAAGA,CAAA,KAAM;MAC5B,IAAIC,SAAS,CAACC,WAAW,EAAE;QACzBD,SAAS,CAACC,WAAW,CAACC,kBAAkB,CACrCC,QAAQ,IAAK;UACZ,MAAMC,QAAQ,GAAG;YACfC,GAAG,EAAEF,QAAQ,CAACG,MAAM,CAACC,QAAQ;YAC7BC,GAAG,EAAEL,QAAQ,CAACG,MAAM,CAACG;UACvB,CAAC;UACDZ,eAAe,CAACO,QAAQ,CAAC;QAC3B,CAAC,EACAM,KAAK,IAAK;UACTC,OAAO,CAACD,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;UACpDb,eAAe,CAAC;YAAEQ,GAAG,EAAE,OAAO;YAAEG,GAAG,EAAE,CAAC;UAAS,CAAC,CAAC,CAAC,CAAC;QACrD,CACF,CAAC;MACH,CAAC,MAAM;QACLG,OAAO,CAACD,KAAK,CAAC,+CAA+C,CAAC;QAC9Db,eAAe,CAAC;UAAEQ,GAAG,EAAE,OAAO;UAAEG,GAAG,EAAE,CAAC;QAAS,CAAC,CAAC,CAAC,CAAC;MACrD;IACF,CAAC;IAEDT,eAAe,CAAC,CAAC;EACnB,CAAC,EAAE,EAAE,CAAC;EAENZ,SAAS,CAAC,MAAM;IACd;IACA,MAAMyB,UAAU,GAAGC,WAAW,CAAC,MAAM;MACnC,IAAIf,YAAY,CAACgB,OAAO,EAAE;QACxBhB,YAAY,CAACgB,OAAO,CAACC,GAAG,GAAGjB,YAAY,CAACgB,OAAO,CAACC,GAAG;MACrD;IACF,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC;;IAEX,OAAO,MAAMC,aAAa,CAACJ,UAAU,CAAC,CAAC,CAAC;EAC1C,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEpB,OAAA;IAAKyB,SAAS,EAAC,sBAAsB;IAAAC,QAAA,EAElCtB,YAAY,iBACXJ,OAAA;MACE2B,GAAG,EAAErB,YAAa;MAClBsB,KAAK,EAAC,YAAY;MAClBH,SAAS,EAAC,eAAe;MACzBI,KAAK,EAAC,KAAK;MACXC,MAAM,EAAC,KAAK;MACZC,OAAO,EAAC,MAAM;MACdC,eAAe;MACfT,GAAG,EAAG,mDAAkDzB,mBAAoB,SAAQM,YAAY,CAACS,GAAI,IAAGT,YAAY,CAACY,GAAI,cAAad,KAAM;IAAE;MAAA+B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvI;EACV;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAACjC,EAAA,CAzDQF,YAAY;AAAAoC,EAAA,GAAZpC,YAAY;AA2DrB,eAAeA,YAAY;AAAC,IAAAoC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}