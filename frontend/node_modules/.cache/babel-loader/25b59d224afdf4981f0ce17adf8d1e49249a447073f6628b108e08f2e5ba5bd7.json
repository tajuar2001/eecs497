{"ast":null,"code":"var _jsxFileName = \"/home/tajuarb/Coding/newLeaf/frontend/src/components/resources/components/ShoppingPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './css/shoppingPage.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ShoppingPage({\n  onBackClick\n}) {\n  _s();\n  const [shoppingLists, setShoppingLists] = useState(() => {\n    const saved = localStorage.getItem(\"shoppingLists\");\n    return saved ? JSON.parse(saved) : [];\n  });\n  useEffect(() => {\n    localStorage.setItem(\"shoppingLists\", JSON.stringify(shoppingLists));\n  }, [shoppingLists]);\n  const addShoppingList = () => {\n    const newList = {\n      id: new Date().getTime(),\n      name: \"New List\",\n      categories: [{\n        name: \"Produce\",\n        items: []\n      }, {\n        name: \"Dairy\",\n        items: []\n      }, {\n        name: \"Meat\",\n        items: []\n      }, {\n        name: \"Utilities\",\n        items: []\n      }]\n    };\n    setShoppingLists([...shoppingLists, newList]);\n  };\n  const deleteShoppingList = id => {\n    setShoppingLists(shoppingLists.filter(list => list.id !== id));\n  };\n\n  // Function to add an item to a specific category in a specific list\n  const addItemToCategory = (listId, categoryName, itemName, itemCount, itemCost) => {\n    const updatedLists = shoppingLists.map(list => {\n      if (list.id === listId) {\n        return {\n          ...list,\n          categories: list.categories.map(category => {\n            if (category.name === categoryName) {\n              return {\n                ...category,\n                items: [...category.items, {\n                  name: itemName,\n                  count: itemCount,\n                  cost: itemCost\n                }]\n              };\n            }\n            return category;\n          })\n        };\n      }\n      return list;\n    });\n    setShoppingLists(updatedLists);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"shopping-page-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Shopping Guide\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"back-button\",\n      onClick: onBackClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: addShoppingList,\n      children: \"Add List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), shoppingLists.map(list => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: list.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => deleteShoppingList(list.id),\n        children: \"Delete List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: list.categories.map((category, catIndex) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: category.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: [category.items.map((item, itemIndex) => /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [item.name, \" - Count: \", item.count, \", Cost: \", item.cost]\n            }, itemIndex, true, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 21\n            }, this)), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: /*#__PURE__*/_jsxDEV(\"form\", {\n                onSubmit: e => {\n                  e.preventDefault();\n                  // Simple validation and data retrieval from form inputs\n                  const itemName = e.target.itemName.value;\n                  const itemCount = parseInt(e.target.itemCount.value, 10);\n                  const itemCost = parseFloat(e.target.itemCost.value);\n                  addItemToCategory(list.id, category.name, itemName, itemCount, itemCost);\n                  e.target.reset(); // Reset form after submission\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  name: \"itemName\",\n                  type: \"text\",\n                  placeholder: \"Item Name\",\n                  required: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 83,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  name: \"itemCount\",\n                  type: \"number\",\n                  placeholder: \"Count\",\n                  required: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 84,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  name: \"itemCost\",\n                  type: \"number\",\n                  step: \"0.01\",\n                  placeholder: \"Cost\",\n                  required: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 85,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"submit\",\n                  children: \"Add Item\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 86,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 17\n          }, this)]\n        }, catIndex, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this)]\n    }, list.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n}\n_s(ShoppingPage, \"iVJSt7uAoc+dnVmCrIt1TonMEFs=\");\n_c = ShoppingPage;\nexport default ShoppingPage;\nvar _c;\n$RefreshReg$(_c, \"ShoppingPage\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","ShoppingPage","onBackClick","_s","shoppingLists","setShoppingLists","saved","localStorage","getItem","JSON","parse","setItem","stringify","addShoppingList","newList","id","Date","getTime","name","categories","items","deleteShoppingList","filter","list","addItemToCategory","listId","categoryName","itemName","itemCount","itemCost","updatedLists","map","category","count","cost","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","catIndex","item","itemIndex","onSubmit","e","preventDefault","target","value","parseInt","parseFloat","reset","type","placeholder","required","step","_c","$RefreshReg$"],"sources":["/home/tajuarb/Coding/newLeaf/frontend/src/components/resources/components/ShoppingPage.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './css/shoppingPage.css';\n\nfunction ShoppingPage({ onBackClick }) {\n  const [shoppingLists, setShoppingLists] = useState(() => {\n    const saved = localStorage.getItem(\"shoppingLists\");\n    return saved ? JSON.parse(saved) : [];\n  });\n\n  useEffect(() => {\n    localStorage.setItem(\"shoppingLists\", JSON.stringify(shoppingLists));\n  }, [shoppingLists]);\n\n  const addShoppingList = () => {\n    const newList = {\n      id: new Date().getTime(),\n      name: \"New List\",\n      categories: [\n        { name: \"Produce\", items: [] },\n        { name: \"Dairy\", items: [] },\n        { name: \"Meat\", items: [] },\n        { name: \"Utilities\", items: [] },\n      ],\n    };\n    setShoppingLists([...shoppingLists, newList]);\n  };\n\n  const deleteShoppingList = (id) => {\n    setShoppingLists(shoppingLists.filter(list => list.id !== id));\n  };\n\n  // Function to add an item to a specific category in a specific list\n  const addItemToCategory = (listId, categoryName, itemName, itemCount, itemCost) => {\n    const updatedLists = shoppingLists.map(list => {\n      if (list.id === listId) {\n        return {\n          ...list,\n          categories: list.categories.map(category => {\n            if (category.name === categoryName) {\n              return {\n                ...category,\n                items: [...category.items, { name: itemName, count: itemCount, cost: itemCost }],\n              };\n            }\n            return category;\n          }),\n        };\n      }\n      return list;\n    });\n    setShoppingLists(updatedLists);\n  };\n\n  return (\n    <div className=\"shopping-page-container\">\n      <h2>Shopping Guide</h2>\n      <button className=\"back-button\" onClick={onBackClick}></button>\n      <button onClick={addShoppingList}>Add List</button>\n      {shoppingLists.map(list => (\n        <div key={list.id}>\n          <h3>{list.name}</h3>\n          <button onClick={() => deleteShoppingList(list.id)}>Delete List</button>\n          <ul>\n            {list.categories.map((category, catIndex) => (\n              <li key={catIndex}>\n                <h4>{category.name}</h4>\n                <ul>\n                  {category.items.map((item, itemIndex) => (\n                    <li key={itemIndex}>\n                      {item.name} - Count: {item.count}, Cost: {item.cost}\n                    </li>\n                  ))}\n                  <li>\n                    <form onSubmit={(e) => {\n                      e.preventDefault();\n                      // Simple validation and data retrieval from form inputs\n                      const itemName = e.target.itemName.value;\n                      const itemCount = parseInt(e.target.itemCount.value, 10);\n                      const itemCost = parseFloat(e.target.itemCost.value);\n                      addItemToCategory(list.id, category.name, itemName, itemCount, itemCost);\n                      e.target.reset(); // Reset form after submission\n                    }}>\n                      <input name=\"itemName\" type=\"text\" placeholder=\"Item Name\" required />\n                      <input name=\"itemCount\" type=\"number\" placeholder=\"Count\" required />\n                      <input name=\"itemCost\" type=\"number\" step=\"0.01\" placeholder=\"Cost\" required />\n                      <button type=\"submit\">Add Item</button>\n                    </form>\n                  </li>\n                </ul>\n              </li>\n            ))}\n          </ul>\n        </div>\n      ))}\n    </div>\n  );\n}\n\nexport default ShoppingPage;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}