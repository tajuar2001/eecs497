{"ast":null,"code":"var _jsxFileName = \"/home/tajuarb/Coding/newLeaf/frontend/src/components/communityPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './css/communityPage.css';\nimport CommunityDetails from './CommunityDetails';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CommunityPage({\n  user\n}) {\n  _s();\n  const [communities, setCommunities] = useState([]);\n  const [userCommunities, setUserCommunities] = useState([]);\n  const [selectedCommunity, setSelectedCommunity] = useState(null);\n  const [newCommunityName, setNewCommunityName] = useState('');\n  const [newCommunityDescription, setNewCommunityDescription] = useState('');\n  const [showCreateCommunityPopup, setShowCreateCommunityPopup] = useState(false);\n  const [recommendedCommunities, setRecommendedCommunities] = useState([]);\n  useEffect(() => {\n    fetchCommunities();\n    fetchUserCommunities();\n    fetchRecommendedCommunities();\n    const storedCommunity = JSON.parse(localStorage.getItem('selectedCommunity'));\n    if (storedCommunity) {\n      setSelectedCommunity(storedCommunity);\n    }\n  }, []);\n  useEffect(() => {\n    localStorage.setItem('selectedCommunity', JSON.stringify(selectedCommunity));\n  }, [selectedCommunity]);\n  const fetchCommunities = async () => {\n    try {\n      const response = await fetch('/api/communities');\n      const data = await response.json();\n      setCommunities(data);\n    } catch (error) {\n      console.error('Error fetching communities:', error);\n    }\n  };\n  const fetchUserCommunities = async () => {\n    try {\n      const response = await fetch('/api/user/communities');\n      const data = await response.json();\n      setUserCommunities(data);\n    } catch (error) {\n      console.error('Error fetching user communities:', error);\n    }\n  };\n  const fetchRecommendedCommunities = async () => {\n    try {\n      const response = await fetch(`/recommendations/communities/${user.id}`);\n      const data = await response.json();\n      setRecommendedCommunities(data);\n    } catch (error) {\n      console.error('Error fetching recommended communities:', error);\n    }\n  };\n  const handleCommunityClick = community => {\n    setSelectedCommunity(community);\n  };\n  const handleJoinCommunity = async communityId => {\n    try {\n      await fetch(`/api/communities/${communityId}/join`, {\n        method: 'POST'\n      });\n      fetchUserCommunities();\n    } catch (error) {\n      console.error('Error joining community:', error);\n    }\n  };\n  const handleLeaveCommunity = async (event, communityId) => {\n    event.stopPropagation();\n    try {\n      await fetch(`/api/communities/${communityId}/leave`, {\n        method: 'POST'\n      });\n      fetchUserCommunities();\n    } catch (error) {\n      console.error('Error leaving community:', error);\n    }\n  };\n  const handleCreateCommunity = async () => {\n    if (!newCommunityName.trim()) {\n      console.error('Community name cannot be empty');\n      return;\n    }\n    try {\n      const response = await fetch('/api/communities', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          name: newCommunityName,\n          description: newCommunityDescription\n        })\n      });\n      const data = await response.json();\n      setNewCommunityName('');\n      setNewCommunityDescription('');\n      fetchCommunities();\n      setShowCreateCommunityPopup(false);\n    } catch (error) {\n      console.error('Error creating community:', error);\n    }\n  };\n  const handleDeleteCommunity = async (event, communityId) => {\n    event.stopPropagation();\n    try {\n      await fetch(`/api/communities/${communityId}`, {\n        method: 'DELETE'\n      });\n      fetchCommunities();\n      fetchUserCommunities();\n    } catch (error) {\n      console.error('Error deleting community:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"community-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dropdown\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dropdown-header\",\n        children: \"My Communities\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dropdown-content\",\n        children: userCommunities.map(community => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dropdown-item\",\n          onClick: () => handleCommunityClick(community),\n          children: community.name\n        }, community.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this), selectedCommunity ? /*#__PURE__*/_jsxDEV(CommunityDetails, {\n      user: user,\n      community: selectedCommunity,\n      onBack: () => setSelectedCommunity(null)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"center-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"community-sidebar\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Communities\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: communities.map(community => /*#__PURE__*/_jsxDEV(\"li\", {\n            onClick: () => handleCommunityClick(community),\n            children: [community.creator_id === user.id && /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: event => handleDeleteCommunity(event, community.id),\n              children: \"Delete Community\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 21\n            }, this), community.name, userCommunities.some(c => c.id === community.id) ? /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: event => handleLeaveCommunity(event, community.id),\n              children: \"Leave\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 21\n            }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleJoinCommunity(community.id),\n              children: \"Join\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 21\n            }, this)]\n          }, community.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"community-content\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"create-community-button\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"create-community-btn\",\n            onClick: () => setShowCreateCommunityPopup(true),\n            children: \"+\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"recommended-communities\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Recommended for you\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: recommendedCommunities.map(community => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [community.name, userCommunities.some(c => c.id === community.id) ? /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: event => handleLeaveCommunity(event, community.id),\n            children: \"Leave\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleJoinCommunity(community.id),\n            children: \"Join\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 17\n          }, this)]\n        }, community.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 8\n    }, this), showCreateCommunityPopup && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"popup-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"popup\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Create Community\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Community Name\",\n          value: newCommunityName,\n          onChange: e => setNewCommunityName(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          placeholder: \"Community Description\",\n          value: newCommunityDescription,\n          onChange: e => setNewCommunityDescription(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleCreateCommunity,\n          children: \"Create\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setShowCreateCommunityPopup(false),\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 116,\n    columnNumber: 5\n  }, this);\n}\n_s(CommunityPage, \"LeviUddgteII/wfLs/xqemj4FYA=\");\n_c = CommunityPage;\nexport default CommunityPage;\nvar _c;\n$RefreshReg$(_c, \"CommunityPage\");","map":{"version":3,"names":["React","useState","useEffect","CommunityDetails","jsxDEV","_jsxDEV","CommunityPage","user","_s","communities","setCommunities","userCommunities","setUserCommunities","selectedCommunity","setSelectedCommunity","newCommunityName","setNewCommunityName","newCommunityDescription","setNewCommunityDescription","showCreateCommunityPopup","setShowCreateCommunityPopup","recommendedCommunities","setRecommendedCommunities","fetchCommunities","fetchUserCommunities","fetchRecommendedCommunities","storedCommunity","JSON","parse","localStorage","getItem","setItem","stringify","response","fetch","data","json","error","console","id","handleCommunityClick","community","handleJoinCommunity","communityId","method","handleLeaveCommunity","event","stopPropagation","handleCreateCommunity","trim","headers","body","name","description","handleDeleteCommunity","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","onClick","onBack","creator_id","some","c","type","placeholder","value","onChange","e","target","_c","$RefreshReg$"],"sources":["/home/tajuarb/Coding/newLeaf/frontend/src/components/communityPage.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './css/communityPage.css';\r\nimport CommunityDetails from './CommunityDetails';\r\n\r\nfunction CommunityPage({ user }) {\r\n  const [communities, setCommunities] = useState([]);\r\n  const [userCommunities, setUserCommunities] = useState([]);\r\n  const [selectedCommunity, setSelectedCommunity] = useState(null);\r\n  const [newCommunityName, setNewCommunityName] = useState('');\r\n  const [newCommunityDescription, setNewCommunityDescription] = useState('');\r\n  const [showCreateCommunityPopup, setShowCreateCommunityPopup] = useState(false);\r\n  const [recommendedCommunities, setRecommendedCommunities] = useState([]);\r\n\r\n  useEffect(() => {\r\n    fetchCommunities();\r\n    fetchUserCommunities();\r\n    fetchRecommendedCommunities();\r\n    const storedCommunity = JSON.parse(localStorage.getItem('selectedCommunity'));\r\n    if (storedCommunity) {\r\n      setSelectedCommunity(storedCommunity);\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem('selectedCommunity', JSON.stringify(selectedCommunity));\r\n  }, [selectedCommunity]);\r\n\r\n  const fetchCommunities = async () => {\r\n    try {\r\n      const response = await fetch('/api/communities');\r\n      const data = await response.json();\r\n      setCommunities(data);\r\n    } catch (error) {\r\n      console.error('Error fetching communities:', error);\r\n    }\r\n  };\r\n\r\n  const fetchUserCommunities = async () => {\r\n    try {\r\n      const response = await fetch('/api/user/communities');\r\n      const data = await response.json();\r\n      setUserCommunities(data);\r\n    } catch (error) {\r\n      console.error('Error fetching user communities:', error);\r\n    }\r\n  };\r\n\r\n  const fetchRecommendedCommunities = async () => {\r\n    try {\r\n      const response = await fetch(`/recommendations/communities/${user.id}`);\r\n      const data = await response.json();\r\n      setRecommendedCommunities(data);\r\n    } catch (error) {\r\n      console.error('Error fetching recommended communities:', error);\r\n    }\r\n  };\r\n\r\n  const handleCommunityClick = (community) => {\r\n    setSelectedCommunity(community);\r\n  };\r\n\r\n  const handleJoinCommunity = async (communityId) => {\r\n    try {\r\n      await fetch(`/api/communities/${communityId}/join`, { method: 'POST' });\r\n      fetchUserCommunities();\r\n    } catch (error) {\r\n      console.error('Error joining community:', error);\r\n    }\r\n  };\r\n\r\n  const handleLeaveCommunity = async (event, communityId) => {\r\n    event.stopPropagation();\r\n    try {\r\n      await fetch(`/api/communities/${communityId}/leave`, { method: 'POST' });\r\n      fetchUserCommunities();\r\n    } catch (error) {\r\n      console.error('Error leaving community:', error);\r\n    }\r\n  };\r\n\r\n  const handleCreateCommunity = async () => {\r\n    if (!newCommunityName.trim()) {\r\n      console.error('Community name cannot be empty');\r\n      return;\r\n    }\r\n    try {\r\n      const response = await fetch('/api/communities', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ name: newCommunityName, description: newCommunityDescription }),\r\n      });\r\n      const data = await response.json();\r\n      setNewCommunityName('');\r\n      setNewCommunityDescription('');\r\n      fetchCommunities();\r\n      setShowCreateCommunityPopup(false);\r\n    } catch (error) {\r\n      console.error('Error creating community:', error);\r\n    }\r\n  };\r\n\r\n  const handleDeleteCommunity = async (event, communityId) => {\r\n    event.stopPropagation();\r\n    try {\r\n      await fetch(`/api/communities/${communityId}`, {\r\n        method: 'DELETE',\r\n      });\r\n      fetchCommunities();\r\n      fetchUserCommunities();\r\n    } catch (error) {\r\n      console.error('Error deleting community:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"community-page\">\r\n      <div className=\"dropdown\">\r\n        <div className=\"dropdown-header\">My Communities</div>\r\n        <div className=\"dropdown-content\">\r\n          {userCommunities.map((community) => (\r\n            <div key={community.id} className=\"dropdown-item\" onClick={() => handleCommunityClick(community)}>\r\n              {community.name}\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n\r\n      {selectedCommunity ? (\r\n        <CommunityDetails user={user} community={selectedCommunity} onBack={() => setSelectedCommunity(null)} />\r\n      ) : (\r\n        <div className=\"center-container\">\r\n          <div className=\"community-sidebar\">\r\n            <h2>Communities</h2>\r\n            <ul>\r\n              {communities.map((community) => (\r\n                <li key={community.id} onClick={() => handleCommunityClick(community)}>\r\n                  {community.creator_id === user.id && (\r\n                    <button onClick={(event) => handleDeleteCommunity(event, community.id)}>Delete Community</button>\r\n                  )}\r\n                  {community.name}\r\n                  {userCommunities.some((c) => c.id === community.id) ? (\r\n                    <button onClick={(event) => handleLeaveCommunity(event, community.id)}>Leave</button>\r\n                  ) : (\r\n                    <button onClick={() => handleJoinCommunity(community.id)}>Join</button>\r\n                  )}\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          </div>\r\n          <div className=\"community-content\">\r\n            <div className=\"create-community-button\">\r\n              <button className=\"create-community-btn\" onClick={() => setShowCreateCommunityPopup(true)}>+</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n       <div className=\"recommended-communities\">\r\n        <h3>Recommended for you</h3>\r\n        <ul>\r\n          {recommendedCommunities.map((community) => (\r\n            <li key={community.id}>\r\n              {community.name}\r\n              {userCommunities.some((c) => c.id === community.id) ? (\r\n                <button onClick={(event) => handleLeaveCommunity(event, community.id)}>Leave</button>\r\n              ) : (\r\n                <button onClick={() => handleJoinCommunity(community.id)}>Join</button>\r\n              )}\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n\r\n      {showCreateCommunityPopup && (\r\n        <div className=\"popup-container\">\r\n          <div className=\"popup\">\r\n            <h3>Create Community</h3>\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Community Name\"\r\n              value={newCommunityName}\r\n              onChange={(e) => setNewCommunityName(e.target.value)}\r\n            />\r\n            <textarea\r\n              placeholder=\"Community Description\"\r\n              value={newCommunityDescription}\r\n              onChange={(e) => setNewCommunityDescription(e.target.value)}\r\n            ></textarea>\r\n            <button onClick={handleCreateCommunity}>Create</button>\r\n            <button onClick={() => setShowCreateCommunityPopup(false)}>Cancel</button>\r\n          </div>\r\n        </div>\r\n        \r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CommunityPage;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}