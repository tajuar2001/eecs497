{"ast":null,"code":"var _jsxFileName = \"/home/tajuarb/Coding/newLeaf/frontend/src/components/CreateAdvicePost.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useContext } from 'react';\nimport axios from 'axios';\nimport './css/advicePage.css';\nimport { useHistory } from 'react-router-dom';\n// Import your AuthContext or similar here\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CreateAdvicePost() {\n  _s();\n  const [question, setQuestion] = useState('');\n  const history = useHistory();\n  // Use AuthContext to check if the user is logged in\n  // const { isLoggedIn } = useContext(AuthContext);\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    // Check if user is logged in\n    // if (!isLoggedIn) {\n    //     alert('You must be logged in to post advice.');\n    //     return;\n    // }\n    axios.post('/api/advice', {\n      question\n    }).then(response => {\n      // Handle success\n      alert('Advice posted successfully');\n      history.go(0);\n      setQuestion('');\n    }).catch(error => {\n      // Handle error\n      console.error('There was an error posting the advice:', error);\n      alert('Error posting advice');\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    classname: \"adviceForm\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"question\",\n        children: \"Your Question:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        id: \"question\",\n        value: question,\n        onChange: e => setQuestion(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Post Advice\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this);\n}\n_s(CreateAdvicePost, \"BSWlsd1IeuXhiQio/b3JpaXb6D8=\", false, function () {\n  return [useHistory];\n});\n_c = CreateAdvicePost;\nexport default CreateAdvicePost;\nvar _c;\n$RefreshReg$(_c, \"CreateAdvicePost\");","map":{"version":3,"names":["React","useState","useContext","axios","useHistory","jsxDEV","_jsxDEV","CreateAdvicePost","_s","question","setQuestion","history","handleSubmit","event","preventDefault","post","then","response","alert","go","catch","error","console","classname","children","onSubmit","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","id","value","onChange","e","target","required","type","_c","$RefreshReg$"],"sources":["/home/tajuarb/Coding/newLeaf/frontend/src/components/CreateAdvicePost.jsx"],"sourcesContent":["import React, { useState, useContext } from 'react';\nimport axios from 'axios';\nimport './css/advicePage.css';\nimport {useHistory} from 'react-router-dom'\n// Import your AuthContext or similar here\n\nfunction CreateAdvicePost() {\n    const [question, setQuestion] = useState('');\n    const history = useHistory()\n    // Use AuthContext to check if the user is logged in\n    // const { isLoggedIn } = useContext(AuthContext);\n\n    const handleSubmit = (event) => {\n        event.preventDefault();\n        // Check if user is logged in\n        // if (!isLoggedIn) {\n        //     alert('You must be logged in to post advice.');\n        //     return;\n        // }\n        axios.post('/api/advice', { question })\n            .then(response => {\n                // Handle success\n                alert('Advice posted successfully');\n                history.go(0);\n                setQuestion('');\n            })\n            .catch(error => {\n                // Handle error\n                console.error('There was an error posting the advice:', error);\n                alert('Error posting advice');\n            });\n    };\n\n    return (\n        <div classname=\"adviceForm\">\n        <form onSubmit={handleSubmit}>\n            <label htmlFor=\"question\">Your Question:</label>\n            <textarea id=\"question\" value={question} onChange={e => setQuestion(e.target.value)} required></textarea>\n            <button type=\"submit\">Post Advice</button>\n        </form>\n        </div>\n    );\n}\n\nexport default CreateAdvicePost;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,UAAU,QAAQ,OAAO;AACnD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAO,sBAAsB;AAC7B,SAAQC,UAAU,QAAO,kBAAkB;AAC3C;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,SAASC,gBAAgBA,CAAA,EAAG;EAAAC,EAAA;EACxB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAMU,OAAO,GAAGP,UAAU,CAAC,CAAC;EAC5B;EACA;;EAEA,MAAMQ,YAAY,GAAIC,KAAK,IAAK;IAC5BA,KAAK,CAACC,cAAc,CAAC,CAAC;IACtB;IACA;IACA;IACA;IACA;IACAX,KAAK,CAACY,IAAI,CAAC,aAAa,EAAE;MAAEN;IAAS,CAAC,CAAC,CAClCO,IAAI,CAACC,QAAQ,IAAI;MACd;MACAC,KAAK,CAAC,4BAA4B,CAAC;MACnCP,OAAO,CAACQ,EAAE,CAAC,CAAC,CAAC;MACbT,WAAW,CAAC,EAAE,CAAC;IACnB,CAAC,CAAC,CACDU,KAAK,CAACC,KAAK,IAAI;MACZ;MACAC,OAAO,CAACD,KAAK,CAAC,wCAAwC,EAAEA,KAAK,CAAC;MAC9DH,KAAK,CAAC,sBAAsB,CAAC;IACjC,CAAC,CAAC;EACV,CAAC;EAED,oBACIZ,OAAA;IAAKiB,SAAS,EAAC,YAAY;IAAAC,QAAA,eAC3BlB,OAAA;MAAMmB,QAAQ,EAAEb,YAAa;MAAAY,QAAA,gBACzBlB,OAAA;QAAOoB,OAAO,EAAC,UAAU;QAAAF,QAAA,EAAC;MAAc;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eAChDxB,OAAA;QAAUyB,EAAE,EAAC,UAAU;QAACC,KAAK,EAAEvB,QAAS;QAACwB,QAAQ,EAAEC,CAAC,IAAIxB,WAAW,CAACwB,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;QAACI,QAAQ;MAAA;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAW,CAAC,eACzGxB,OAAA;QAAQ+B,IAAI,EAAC,QAAQ;QAAAb,QAAA,EAAC;MAAW;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEd;AAACtB,EAAA,CApCQD,gBAAgB;EAAA,QAELH,UAAU;AAAA;AAAAkC,EAAA,GAFrB/B,gBAAgB;AAsCzB,eAAeA,gBAAgB;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}