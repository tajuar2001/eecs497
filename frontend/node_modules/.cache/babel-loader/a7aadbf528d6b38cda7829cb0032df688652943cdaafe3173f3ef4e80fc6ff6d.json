{"ast":null,"code":"var _jsxFileName = \"/home/tajuarb/Coding/newLeaf/frontend/src/components/CommunityDetails.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CommunityDetails({\n  community,\n  onBack\n}) {\n  _s();\n  const [communityPosts, setCommunityPosts] = useState([]);\n  const [newPostTitle, setNewPostTitle] = useState('');\n  const [newPostContent, setNewPostContent] = useState('');\n  useEffect(() => {\n    fetchCommunityPosts();\n  }, [community]);\n  const fetchCommunityPosts = async () => {\n    try {\n      const response = await fetch(`/api/communities/${community.id}/posts`);\n      const data = await response.json();\n      setCommunityPosts(data);\n    } catch (error) {\n      console.error('Error fetching community posts:', error);\n    }\n  };\n  const handleCreatePost = async () => {\n    try {\n      const response = await fetch(`/api/communities/${community.id}/posts`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          title: newPostTitle,\n          content: newPostContent\n        })\n      });\n      const data = await response.json();\n      setNewPostTitle('');\n      setNewPostContent('');\n      fetchCommunityPosts();\n    } catch (error) {\n      console.error('Error creating post:', error);\n    }\n  };\n  const handleReplyToPost = async (postId, replyContent) => {\n    try {\n      await fetch(`/api/communities/${community.id}/posts/${postId}/replies`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          content: replyContent\n        })\n      });\n      fetchCommunityPosts();\n    } catch (error) {\n      console.error('Error replying to post:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"community-details\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: onBack,\n      children: \"Back\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: community.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"create-post\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Create Post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Title\",\n        value: newPostTitle,\n        onChange: e => setNewPostTitle(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        placeholder: \"Content\",\n        value: newPostContent,\n        onChange: e => setNewPostContent(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleCreatePost,\n        children: \"Create\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"community-posts\",\n      children: communityPosts.map(post => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"post\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: post.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: post.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"post-replies\",\n          children: post.replies && post.replies.map(reply => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"reply\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: reply.content\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 19\n            }, this)\n          }, reply.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"reply-input\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Reply...\",\n            onKeyPress: e => {\n              if (e.key === 'Enter') {\n                handleReplyToPost(post.id, e.target.value);\n                e.target.value = '';\n              }\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 13\n        }, this)]\n      }, post.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n}\n_s(CommunityDetails, \"YTzXb7JV1MKz3G1OtA+kVdGXxks=\");\n_c = CommunityDetails;\nexport default CommunityDetails;\nvar _c;\n$RefreshReg$(_c, \"CommunityDetails\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","CommunityDetails","community","onBack","_s","communityPosts","setCommunityPosts","newPostTitle","setNewPostTitle","newPostContent","setNewPostContent","fetchCommunityPosts","response","fetch","id","data","json","error","console","handleCreatePost","method","headers","body","JSON","stringify","title","content","handleReplyToPost","postId","replyContent","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","name","type","placeholder","value","onChange","e","target","map","post","replies","reply","onKeyPress","key","_c","$RefreshReg$"],"sources":["/home/tajuarb/Coding/newLeaf/frontend/src/components/CommunityDetails.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nfunction CommunityDetails({ community, onBack }) {\n  const [communityPosts, setCommunityPosts] = useState([]);\n  const [newPostTitle, setNewPostTitle] = useState('');\n  const [newPostContent, setNewPostContent] = useState('');\n\n  useEffect(() => {\n    fetchCommunityPosts();\n  }, [community]);\n\n  const fetchCommunityPosts = async () => {\n    try {\n      const response = await fetch(`/api/communities/${community.id}/posts`);\n      const data = await response.json();\n      setCommunityPosts(data);\n    } catch (error) {\n      console.error('Error fetching community posts:', error);\n    }\n  };\n\n  const handleCreatePost = async () => {\n    try {\n      const response = await fetch(`/api/communities/${community.id}/posts`, {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ title: newPostTitle, content: newPostContent }),\n      });\n      const data = await response.json();\n      setNewPostTitle('');\n      setNewPostContent('');\n      fetchCommunityPosts();\n    } catch (error) {\n      console.error('Error creating post:', error);\n    }\n  };\n\n  const handleReplyToPost = async (postId, replyContent) => {\n    try {\n      await fetch(`/api/communities/${community.id}/posts/${postId}/replies`, {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ content: replyContent }),\n      });\n      fetchCommunityPosts();\n    } catch (error) {\n      console.error('Error replying to post:', error);\n    }\n  };\n\n  return (\n    <div className=\"community-details\">\n      <button onClick={onBack}>Back</button>\n      <h2>{community.name}</h2>\n      <div className=\"create-post\">\n        <h3>Create Post</h3>\n        <input\n          type=\"text\"\n          placeholder=\"Title\"\n          value={newPostTitle}\n          onChange={(e) => setNewPostTitle(e.target.value)}\n        />\n        <textarea\n          placeholder=\"Content\"\n          value={newPostContent}\n          onChange={(e) => setNewPostContent(e.target.value)}\n        ></textarea>\n        <button onClick={handleCreatePost}>Create</button>\n      </div>\n      <div className=\"community-posts\">\n        {communityPosts.map((post) => (\n          <div key={post.id} className=\"post\">\n            <h4>{post.title}</h4>\n            <p>{post.content}</p>\n            <div className=\"post-replies\">\n              {post.replies && post.replies.map((reply) => (\n                <div key={reply.id} className=\"reply\">\n                  <p>{reply.content}</p>\n                </div>\n              ))}\n            </div>\n            <div className=\"reply-input\">\n              <input\n                type=\"text\"\n                placeholder=\"Reply...\"\n                onKeyPress={(e) => {\n                  if (e.key === 'Enter') {\n                    handleReplyToPost(post.id, e.target.value);\n                    e.target.value = '';\n                  }\n                }}\n              />\n            </div>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default CommunityDetails;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}