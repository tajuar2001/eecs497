{"ast":null,"code":"var _jsxFileName = \"/home/tajuarb/Coding/newLeaf/frontend/src/components/communityPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './css/communityPage.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction CommunityPage() {\n  _s();\n  const [communities, setCommunities] = useState([]);\n  const [selectedCommunity, setSelectedCommunity] = useState(null);\n  const [communityPosts, setCommunityPosts] = useState([]);\n  const [newPostTitle, setNewPostTitle] = useState('');\n  const [newPostContent, setNewPostContent] = useState('');\n  const [newCommunityName, setNewCommunityName] = useState('');\n  const [newCommunityDescription, setNewCommunityDescription] = useState('');\n  useEffect(() => {\n    fetchCommunities();\n    fetchUserCommunities();\n  }, []);\n  const fetchUserCommunities = async () => {\n    try {\n      const response = await fetch('/api/user/communities');\n      const data = await response.json();\n      setUserCommunities(data);\n    } catch (error) {\n      console.error('Error fetching user communities:', error);\n    }\n  };\n  const fetchCommunityPosts = async communityId => {\n    try {\n      const response = await fetch(`/api/communities/${communityId}/posts`);\n      const data = await response.json();\n      setCommunityPosts(data);\n    } catch (error) {\n      console.error('Error fetching community posts:', error);\n    }\n  };\n  const handleCommunityClick = community => {\n    setSelectedCommunity(community);\n    fetchCommunityPosts(community.id);\n  };\n  const handleJoinCommunity = async communityId => {\n    try {\n      await fetch(`/api/communities/${communityId}/join`, {\n        method: 'POST'\n      });\n      fetchUserCommunities();\n    } catch (error) {\n      console.error('Error joining community:', error);\n    }\n  };\n  const handleLeaveCommunity = async communityId => {\n    try {\n      await fetch(`/api/communities/${communityId}/leave`, {\n        method: 'POST'\n      });\n      fetchUserCommunities();\n      setSelectedCommunity(null);\n      setCommunityPosts([]);\n    } catch (error) {\n      console.error('Error leaving community:', error);\n    }\n  };\n  const handleCreateCommunity = async () => {\n    try {\n      const response = await fetch('/api/communities', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          name: newCommunityName,\n          description: newCommunityDescription\n        })\n      });\n      const data = await response.json();\n      setNewCommunityName('');\n      setNewCommunityDescription('');\n      fetchUserCommunities();\n    } catch (error) {\n      console.error('Error creating community:', error);\n    }\n  };\n  const handleCreatePost = async () => {\n    try {\n      const response = await fetch(`/api/communities/${selectedCommunity.id}/posts`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          title: newPostTitle,\n          content: newPostContent\n        })\n      });\n      const data = await response.json();\n      setNewPostTitle('');\n      setNewPostContent('');\n      fetchCommunityPosts(selectedCommunity.id);\n    } catch (error) {\n      console.error('Error creating post:', error);\n    }\n  };\n  const handleReplyToPost = async (postId, replyContent) => {\n    try {\n      await fetch(`/api/communities/${selectedCommunity.id}/posts/${postId}/replies`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          content: replyContent\n        })\n      });\n      fetchCommunityPosts(selectedCommunity.id);\n    } catch (error) {\n      console.error('Error replying to post:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"community-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"community-sidebar\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Communities\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: communities.map(community => /*#__PURE__*/_jsxDEV(\"li\", {\n          onClick: () => handleCommunityClick(community),\n          className: selectedCommunity && selectedCommunity.id === community.id ? 'active' : '',\n          children: [community.name, selectedCommunity && selectedCommunity.id === community.id ? /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleLeaveCommunity(community.id),\n            children: \"Leave\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleJoinCommunity(community.id),\n            children: \"Join\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 17\n          }, this)]\n        }, community.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"create-community\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Create Community\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Community Name\",\n          value: newCommunityName,\n          onChange: e => setNewCommunityName(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          placeholder: \"Community Description\",\n          value: newCommunityDescription,\n          onChange: e => setNewCommunityDescription(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleCreateCommunity,\n          children: \"Create\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"community-content\",\n      children: selectedCommunity ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: selectedCommunity.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"create-post\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Create Post\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Title\",\n            value: newPostTitle,\n            onChange: e => setNewPostTitle(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            placeholder: \"Content\",\n            value: newPostContent,\n            onChange: e => setNewPostContent(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleCreatePost,\n            children: \"Create\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"community-posts\",\n          children: communityPosts.map(post => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"post\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: post.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 7\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: post.content\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 168,\n              columnNumber: 7\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"post-replies\",\n              children: post.replies && post.replies.map(reply => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"reply\",\n                children: /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: reply.content\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 172,\n                  columnNumber: 13\n                }, this)\n              }, reply.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 171,\n                columnNumber: 11\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 7\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"reply-input\",\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                placeholder: \"Reply...\",\n                onKeyPress: e => {\n                  if (e.key === 'Enter') {\n                    handleReplyToPost(post.id, e.target.value);\n                    e.target.value = '';\n                  }\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 177,\n                columnNumber: 9\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 176,\n              columnNumber: 7\n            }, this)]\n          }, post.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 5\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Select a community to view posts.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 109,\n    columnNumber: 5\n  }, this);\n}\n_s(CommunityPage, \"vlAlYl2UysT7xsBN6MavVwL0P18=\");\n_c = CommunityPage;\nexport default CommunityPage;\nvar _c;\n$RefreshReg$(_c, \"CommunityPage\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Fragment","_Fragment","CommunityPage","_s","communities","setCommunities","selectedCommunity","setSelectedCommunity","communityPosts","setCommunityPosts","newPostTitle","setNewPostTitle","newPostContent","setNewPostContent","newCommunityName","setNewCommunityName","newCommunityDescription","setNewCommunityDescription","fetchCommunities","fetchUserCommunities","response","fetch","data","json","setUserCommunities","error","console","fetchCommunityPosts","communityId","handleCommunityClick","community","id","handleJoinCommunity","method","handleLeaveCommunity","handleCreateCommunity","headers","body","JSON","stringify","name","description","handleCreatePost","title","content","handleReplyToPost","postId","replyContent","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","onClick","type","placeholder","value","onChange","e","target","post","replies","reply","onKeyPress","key","_c","$RefreshReg$"],"sources":["/home/tajuarb/Coding/newLeaf/frontend/src/components/communityPage.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './css/communityPage.css';\n\nfunction CommunityPage() {\n  const [communities, setCommunities] = useState([]);\n  const [selectedCommunity, setSelectedCommunity] = useState(null);\n  const [communityPosts, setCommunityPosts] = useState([]);\n  const [newPostTitle, setNewPostTitle] = useState('');\n  const [newPostContent, setNewPostContent] = useState('');\n  const [newCommunityName, setNewCommunityName] = useState('');\n  const [newCommunityDescription, setNewCommunityDescription] = useState('');\n\n  useEffect(() => {\n    fetchCommunities();\n    fetchUserCommunities();\n  }, []);\n  \n  const fetchUserCommunities = async () => {\n    try {\n      const response = await fetch('/api/user/communities');\n      const data = await response.json();\n      setUserCommunities(data);\n    } catch (error) {\n      console.error('Error fetching user communities:', error);\n    }\n  };\n\n  const fetchCommunityPosts = async (communityId) => {\n    try {\n      const response = await fetch(`/api/communities/${communityId}/posts`);\n      const data = await response.json();\n      setCommunityPosts(data);\n    } catch (error) {\n      console.error('Error fetching community posts:', error);\n    }\n  };\n\n  const handleCommunityClick = (community) => {\n    setSelectedCommunity(community);\n    fetchCommunityPosts(community.id);\n  };\n\n  const handleJoinCommunity = async (communityId) => {\n    try {\n      await fetch(`/api/communities/${communityId}/join`, { method: 'POST' });\n      fetchUserCommunities();\n    } catch (error) {\n      console.error('Error joining community:', error);\n    }\n  };\n\n  const handleLeaveCommunity = async (communityId) => {\n    try {\n      await fetch(`/api/communities/${communityId}/leave`, { method: 'POST' });\n      fetchUserCommunities();\n      setSelectedCommunity(null);\n      setCommunityPosts([]);\n    } catch (error) {\n      console.error('Error leaving community:', error);\n    }\n  };\n\n  const handleCreateCommunity = async () => {\n    try {\n      const response = await fetch('/api/communities', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ name: newCommunityName, description: newCommunityDescription }),\n      });\n      const data = await response.json();\n      setNewCommunityName('');\n      setNewCommunityDescription('');\n      fetchUserCommunities();\n    } catch (error) {\n      console.error('Error creating community:', error);\n    }\n  };\n\n  const handleCreatePost = async () => {\n    try {\n      const response = await fetch(`/api/communities/${selectedCommunity.id}/posts`, {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ title: newPostTitle, content: newPostContent }),\n      });\n      const data = await response.json();\n      setNewPostTitle('');\n      setNewPostContent('');\n      fetchCommunityPosts(selectedCommunity.id);\n    } catch (error) {\n      console.error('Error creating post:', error);\n    }\n  };\n\n  const handleReplyToPost = async (postId, replyContent) => {\n    try {\n      await fetch(`/api/communities/${selectedCommunity.id}/posts/${postId}/replies`, {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ content: replyContent }),\n      });\n      fetchCommunityPosts(selectedCommunity.id);\n    } catch (error) {\n      console.error('Error replying to post:', error);\n    }\n  };\n\n  return (\n    <div className=\"community-page\">\n      <div className=\"community-sidebar\">\n        <h2>Communities</h2>\n        \n        <ul>\n          {communities.map((community) => (\n            <li\n              key={community.id}\n              onClick={() => handleCommunityClick(community)}\n              className={selectedCommunity && selectedCommunity.id === community.id ? 'active' : ''}\n            >\n              {community.name}\n              {selectedCommunity && selectedCommunity.id === community.id ? (\n                <button onClick={() => handleLeaveCommunity(community.id)}>Leave</button>\n              ) : (\n                <button onClick={() => handleJoinCommunity(community.id)}>Join</button>\n              )}\n            </li>\n          ))}\n        </ul>\n        <div className=\"create-community\">\n          <h3>Create Community</h3>\n          <input\n            type=\"text\"\n            placeholder=\"Community Name\"\n            value={newCommunityName}\n            onChange={(e) => setNewCommunityName(e.target.value)}\n          />\n          <textarea\n            placeholder=\"Community Description\"\n            value={newCommunityDescription}\n            onChange={(e) => setNewCommunityDescription(e.target.value)}\n          ></textarea>\n          <button onClick={handleCreateCommunity}>Create</button>\n        </div>\n      </div>\n      <div className=\"community-content\">\n        {selectedCommunity ? (\n          <>\n            <h2>{selectedCommunity.name}</h2>\n            <div className=\"create-post\">\n              <h3>Create Post</h3>\n              <input\n                type=\"text\"\n                placeholder=\"Title\"\n                value={newPostTitle}\n                onChange={(e) => setNewPostTitle(e.target.value)}\n              />\n              <textarea\n                placeholder=\"Content\"\n                value={newPostContent}\n                onChange={(e) => setNewPostContent(e.target.value)}\n              ></textarea>\n              <button onClick={handleCreatePost}>Create</button>\n            </div>\n            <div className=\"community-posts\">\n  {communityPosts.map((post) => (\n    <div key={post.id} className=\"post\">\n      <h4>{post.title}</h4>\n      <p>{post.content}</p>\n      <div className=\"post-replies\">\n        {post.replies && post.replies.map((reply) => (\n          <div key={reply.id} className=\"reply\">\n            <p>{reply.content}</p>\n          </div>\n        ))}\n      </div>\n      <div className=\"reply-input\">\n        <input\n          type=\"text\"\n          placeholder=\"Reply...\"\n          onKeyPress={(e) => {\n            if (e.key === 'Enter') {\n              handleReplyToPost(post.id, e.target.value);\n              e.target.value = '';\n            }\n          }}\n        />\n      </div>\n    </div>\n  ))}\n</div>\n          </>\n        ) : (\n          <p>Select a community to view posts.</p>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default CommunityPage;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}