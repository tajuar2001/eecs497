{"ast":null,"code":"var _jsxFileName = \"/home/tajuarb/Coding/newLeaf/frontend/src/components/resources/components/ShoppingPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './css/shoppingPage.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ShoppingPage({\n  onBackClick\n}) {\n  _s();\n  // State to store the list of shopping lists\n  const [shoppingLists, setShoppingLists] = useState(() => {\n    // Attempt to load saved shopping lists from local storage\n    const saved = localStorage.getItem(\"shoppingLists\");\n    return saved ? JSON.parse(saved) : [];\n  });\n\n  // Whenever shoppingLists changes, save it to local storage\n  useEffect(() => {\n    localStorage.setItem(\"shoppingLists\", JSON.stringify(shoppingLists));\n  }, [shoppingLists]);\n  const addShoppingList = () => {\n    const newList = {\n      id: new Date().getTime(),\n      // Simple ID generation\n      name: \"New List\",\n      categories: [{\n        name: \"Produce\",\n        items: []\n      }, {\n        name: \"Dairy\",\n        items: []\n      }, {\n        name: \"Meat\",\n        items: []\n      }, {\n        name: \"Utilities\",\n        items: []\n      }]\n    };\n    setShoppingLists([...shoppingLists, newList]);\n  };\n  const deleteShoppingList = id => {\n    setShoppingLists(shoppingLists.filter(list => list.id !== id));\n  };\n\n  // This is a very simplified rendering.\n  // You would need to expand this with form inputs for adding categories, items, etc.\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"shopping-page-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Shopping Guide\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"back-button\",\n      onClick: onBackClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: addShoppingList,\n      children: \"Add List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), shoppingLists.map((list, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: list.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => deleteShoppingList(list.id),\n        children: \"Delete List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this)]\n    }, list.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n_s(ShoppingPage, \"QbG4vAVlNvCNCiWO+LtkD6kadh4=\");\n_c = ShoppingPage;\nexport default ShoppingPage;\nvar _c;\n$RefreshReg$(_c, \"ShoppingPage\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","ShoppingPage","onBackClick","_s","shoppingLists","setShoppingLists","saved","localStorage","getItem","JSON","parse","setItem","stringify","addShoppingList","newList","id","Date","getTime","name","categories","items","deleteShoppingList","filter","list","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","index","_c","$RefreshReg$"],"sources":["/home/tajuarb/Coding/newLeaf/frontend/src/components/resources/components/ShoppingPage.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './css/shoppingPage.css';\n\nfunction ShoppingPage({ onBackClick }) {\n  // State to store the list of shopping lists\n  const [shoppingLists, setShoppingLists] = useState(() => {\n    // Attempt to load saved shopping lists from local storage\n    const saved = localStorage.getItem(\"shoppingLists\");\n    return saved ? JSON.parse(saved) : [];\n  });\n\n  // Whenever shoppingLists changes, save it to local storage\n  useEffect(() => {\n    localStorage.setItem(\"shoppingLists\", JSON.stringify(shoppingLists));\n  }, [shoppingLists]);\n\n  const addShoppingList = () => {\n    const newList = {\n      id: new Date().getTime(), // Simple ID generation\n      name: \"New List\",\n      categories: [\n        { name: \"Produce\", items: [] },\n        { name: \"Dairy\", items: [] },\n        { name: \"Meat\", items: [] },\n        { name: \"Utilities\", items: [] }\n      ],\n    };\n    setShoppingLists([...shoppingLists, newList]);\n  };\n\n  const deleteShoppingList = (id) => {\n    setShoppingLists(shoppingLists.filter(list => list.id !== id));\n  };\n\n  // This is a very simplified rendering.\n  // You would need to expand this with form inputs for adding categories, items, etc.\n  return (\n    <div className=\"shopping-page-container\">\n      <h2>Shopping Guide</h2>\n      <button className=\"back-button\" onClick={onBackClick}></button>\n      <button onClick={addShoppingList}>Add List</button>\n      {shoppingLists.map((list, index) => (\n        <div key={list.id}>\n          <h3>{list.name}</h3>\n          <button onClick={() => deleteShoppingList(list.id)}>Delete List</button>\n          \n        </div>\n      ))}\n    </div>\n  );\n}\n\nexport default ShoppingPage;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}